[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R for Cancer Bioinformatics",
    "section": "",
    "text": "üßë Instructor: Md. Jubayer Hossain\n\n\nüóì July 5, 2024 - July 6, 2024 | 9:30 am - 12:30pm (Bangladesh Time)\n\n\nüè® Medium - Zoom\n\n\nüí• Register with Google Forms \n\n\nüí• Registration Fee: 1020BDT (for students), 1530BDT (for professionals)\n\n\nüìù To join private Telegram group for the course, follow instructions in the email you received after registration.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "part_2_eda.html",
    "href": "part_2_eda.html",
    "title": "Part I",
    "section": "",
    "text": "Page with R code\n\n\n\nThis page contains an example template for a lab session, where R code and results are displayed here.\nYou can find more information on how to include code in Quarto website here.\nYou can experiment with code-fold and code-tools in the yaml header above to change how the code cells look like."
  },
  {
    "objectID": "part_2_eda.html#a-cancer-modeling-example",
    "href": "part_2_eda.html#a-cancer-modeling-example",
    "title": "Part I",
    "section": "A Cancer Modeling Example",
    "text": "A Cancer Modeling Example\nExercise on analysis of miRNA, mRNA and protein data from the paper Aure et al, Integrated analysis reveals microRNA networks coordinately expressed with key proteins in breast cancer, Genome Medicine, 2015.\nPlease run the code provided to replicate some of the analyses. Make sure you can explain what all the analysis steps do and that you understand all the results.\nIn addition, there are some extra tasks (Task 1), where no R code is provided. Please do these tasks when you have time available at the end of the lab.\n\nLoad the data\nRead the data, and convert to matrix format.\n\nmrna &lt;- read.table(\"data/data_example.txt\", header=T, sep=\"\\t\", dec=\".\")\n\n# Convert to matrix format\n\nmrna &lt;- as.matrix(mrna)\n\nPrint the data\n\nmrna[1:4, 1:4]\n\n      OSL2R.3002T4 OSL2R.3005T1 OSL2R.3013T1 OSL2R.3030T2\nACACA      1.60034     -0.49087     -0.26553     -0.27857\nANXA1     -2.42501     -0.05416     -0.46478     -2.18393\nAR         0.39615     -0.43348     -0.10232      0.58299\nBAK1       0.78627      0.39897      0.22598     -1.31202\n\n\nVisualise the overall distribution of expression levels by histogram\n\nhist(mrna, nclass=40, xlim=c(-5,5), col=\"lightblue\")\n\n\n\n\n\n\n\n\n\n\nTask 1\n\n\n\nThis is a callout-note, and it can be quite useful for exercises. You can find more about callout here.\nExample: Extend the above analysis to cover all genes."
  },
  {
    "objectID": "part_1_prep.html",
    "href": "part_1_prep.html",
    "title": "Preparation",
    "section": "",
    "text": "Page without code\n\n\n\nThis page contains an example for some structured preparation information for a workshop. No code is executed here.\nHere are some preparation information for the participants."
  },
  {
    "objectID": "part_1_prep.html#software",
    "href": "part_1_prep.html#software",
    "title": "Preparation",
    "section": "Software",
    "text": "Software\nIn this workshop we will be using R. You can either\n\nhave R and Rstudio installed on your laptop\nor, use Posit cloud (formerly Rstudio Cloud).\n\nPosit cloud is free of charge for personal users, yet you need to sign up for a new user account and have internet connection.\nThe R package we are using is glmnet."
  },
  {
    "objectID": "part_1_prep.html#data",
    "href": "part_1_prep.html#data",
    "title": "Preparation",
    "section": "Data",
    "text": "Data\nThe datasets we use can be found here (insert link)."
  },
  {
    "objectID": "part_1_prep.html#code",
    "href": "part_1_prep.html#code",
    "title": "Preparation",
    "section": "Code",
    "text": "Code\nThe R scripts used in part 1 and part 2 can be found here (insert link)."
  },
  {
    "objectID": "part_1_prep.html#resources",
    "href": "part_1_prep.html#resources",
    "title": "Preparation",
    "section": "Resources",
    "text": "Resources\nLecture notes (insert link)\nLab notes (insert link)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Who We Are: CHIRAL Bangladesh\n\n\n\nCenter for Health Innovation, Research, Action and Learning - Bangladesh (CHIRAL Bangladesh) is a voluntary non-profit research organization, resolving to promote interdisciplinary research in the field of health data science, computational biology and genomics."
  },
  {
    "objectID": "prework.html",
    "href": "prework.html",
    "title": "Preparation",
    "section": "",
    "text": "Here are some preparation information for the participants."
  },
  {
    "objectID": "prework.html#software",
    "href": "prework.html#software",
    "title": "Preparation",
    "section": "Software",
    "text": "Software\nIn this workshop we will be using R. You can either\n\nhave R and Rstudio installed on your laptop\nor, use Posit cloud (formerly Rstudio Cloud).\n\nPosit cloud is free of charge for personal users, yet you need to sign up for a new user account and have internet connection."
  },
  {
    "objectID": "prework.html#data",
    "href": "prework.html#data",
    "title": "Preparation",
    "section": "Data",
    "text": "Data\nThe datasets we use can be found here Genomic Data Commons (GDC): https://gdc.cancer.gov/."
  },
  {
    "objectID": "prework.html#code",
    "href": "prework.html#code",
    "title": "Preparation",
    "section": "Code",
    "text": "Code\nThe R scripts used in part 1 and part 2 can be found here https://github.com/omicscenter/TCGADataAnalysiswithR."
  },
  {
    "objectID": "prework.html#resources",
    "href": "prework.html#resources",
    "title": "Preparation",
    "section": "Resources",
    "text": "Resources\nLecture notes (insert link)\nLab notes (insert link)"
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Resources",
    "section": "",
    "text": "The NCI‚Äôs Genomic Data Commons (GDC): https://gdc.cancer.gov/\nTCGAbiolinks package: http://bioconductor.org/packages/TCGAbiolinks/\nmaftools package: http://bioconductor.org/packages/maftools/"
  },
  {
    "objectID": "resources.html#a-cancer-modeling-example",
    "href": "resources.html#a-cancer-modeling-example",
    "title": "Part I",
    "section": "A Cancer Modeling Example",
    "text": "A Cancer Modeling Example\nExercise on analysis of miRNA, mRNA and protein data from the paper Aure et al, Integrated analysis reveals microRNA networks coordinately expressed with key proteins in breast cancer, Genome Medicine, 2015.\nPlease run the code provided to replicate some of the analyses. Make sure you can explain what all the analysis steps do and that you understand all the results.\nIn addition, there are some extra tasks (Task 1), where no R code is provided. Please do these tasks when you have time available at the end of the lab.\n\nLoad the data\nRead the data, and convert to matrix format.\n\nmrna &lt;- read.table(\"data/data_example.txt\", header=T, sep=\"\\t\", dec=\".\")\n\n# Convert to matrix format\n\nmrna &lt;- as.matrix(mrna)\n\nPrint the data\n\nmrna[1:4, 1:4]\n\n      OSL2R.3002T4 OSL2R.3005T1 OSL2R.3013T1 OSL2R.3030T2\nACACA      1.60034     -0.49087     -0.26553     -0.27857\nANXA1     -2.42501     -0.05416     -0.46478     -2.18393\nAR         0.39615     -0.43348     -0.10232      0.58299\nBAK1       0.78627      0.39897      0.22598     -1.31202\n\n\nVisualise the overall distribution of expression levels by histogram\n\nhist(mrna, nclass=40, xlim=c(-5,5), col=\"lightblue\")\n\n\n\n\n\n\n\n\n\n\nTask 1\n\n\n\nThis is a callout-note, and it can be quite useful for exercises. You can find more about callout here.\nExample: Extend the above analysis to cover all genes."
  },
  {
    "objectID": "resources.html#data-and-tools-for-cancer-genomics",
    "href": "resources.html#data-and-tools-for-cancer-genomics",
    "title": "Resources",
    "section": "",
    "text": "The Cancer Genome Atlas (TCGA): TCGA is a comprehensive collection of multi-dimensional cancer genomics data covering multiple cancer types.\nInternational Cancer Genome Consortium (ICGC): Description: ICGC provides high-quality genomic and clinical data from various cancer projects worldwide.\nGene Expression Omnibus (GEO): GEO is a public repository hosted by the National Center for Biotechnology Information (NCBI) containing a vast collection of gene expression data, including cancer datasets.\nEuropean Genome-phenome Archive (EGA): Description: EGA is a repository for secure storage and sharing of human genetic and phenotypic data, including cancer datasets.\nNational Cancer Institute (NCI) Genomic Data Commons (GDC): Description: GDC is an open-access data portal providing access to a wide range of cancer genomics datasets.\nOncoLnc: Description: OncoLnc is a web resource that provides survival analysis and expression correlation for genes of interest across multiple cancer datasets.\nUCSC Cancer Genomics Browser: The UCSC Cancer Genomics Browser offers a comprehensive collection of cancer genomics data integrated with genomic annotations.\nGREIN : GEO RNA-seq Experiments Interactive Navigator: GREIN is an interactive web platform that provides user-friendly options to explore and analyze GEO RNA-seq data. GREIN is powered by the back-end computational pipeline for uniform processing of RNA-seq data and the large number (&gt;6,000) of already processed datasets. These datasets were retrieved from GEO and reprocessed consistently by the back-end GEO RNA-seq experiments processing pipeline (GREP2).\nGEPIA2: GEPIA2 is a web-based tool for analyzing gene expression data in cancer. It stands for Gene Expression Profiling Interactive Analysis 2 and is an updated version of the original GEPIA tool. GEPIA2 allows users to explore gene expression patterns, perform survival analyses, and visualize gene expression data across various cancer types.\nUALCAN: UALCAN is a web-based platform that provides interactive and comprehensive analysis of cancer transcriptome data. It enables users to explore gene expression patterns, perform survival analyses, and compare gene expression between tumor and normal samples across different cancer types. UALCAN utilizes data from The Cancer Genome Atlas (TCGA) to facilitate cancer research and provide insights into tumor biology.\ncBioPortal for Cancer Genomics:: cBioPortal hosts a large collection of cancer genomics datasets, allowing users to explore and visualize the data.\nONCOMINE: ONCOMINE is a powerful web-based platform for the analysis and visualization of cancer transcriptomic data. It provides researchers with access to a vast collection of publicly available gene expression datasets derived from cancer studies. ONCOMINE allows users to explore gene expression patterns, identify potential biomarkers, and compare gene expression between different cancer types or subtypes."
  },
  {
    "objectID": "resources.html#guideline-for-bioconductor-users",
    "href": "resources.html#guideline-for-bioconductor-users",
    "title": "Resources",
    "section": "Guideline for Bioconductor Users",
    "text": "Guideline for Bioconductor Users\nBioconductor is an open-source and open-development software project that provides a comprehensive collection of bioinformatics and computational biology tools in the R programming language. It focuses on the analysis and comprehension of high-throughput genomic data, including DNA sequencing, RNA sequencing, microarray analysis, proteomics, and more."
  },
  {
    "objectID": "resources.html#required-software",
    "href": "resources.html#required-software",
    "title": "Resources",
    "section": "Required software",
    "text": "Required software\n\nR: http://www.r-project.org/ (FREE)\nRStudio (additional libraries required): http://www.rstudio.com/ (FREE)"
  },
  {
    "objectID": "resources.html#prework",
    "href": "resources.html#prework",
    "title": "Resources",
    "section": "Prework",
    "text": "Prework\nBefore attending the any workshop please have the following installed and configured on your machine. - Recent version of R - Recent version of RStudio - Most recent release of the Bioconductor and other packages used in courses\nInstall the latest release of R, then get the latest version of Bioconductor by starting R and entering the commands.\n\nif (!require(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\nBiocManager::install(version = \"3.16\")\n\n\nEnsure you can knit R markdown documents\n\nOpen RStudio and create a new Rmarkdown document\nSave the document and check you are able to knit it."
  },
  {
    "objectID": "resources.html#install-bioconductor-packages",
    "href": "resources.html#install-bioconductor-packages",
    "title": "Resources",
    "section": "Install Bioconductor Packages",
    "text": "Install Bioconductor Packages\n\nif (!require(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\nBiocManager::install()\n\nInstall specific packages, e.g., ‚ÄúGenomicFeatures‚Äù and ‚ÄúAnnotationDbi‚Äù, with\n\nBiocManager::install(c(\"GenomicFeatures\", \"AnnotationDbi\"))\n\nThe install() function (in the BiocManager package) has arguments that change its default behavior; type ?install for further help."
  },
  {
    "objectID": "resources.html#r-packages-rnaseq-and-single-cell-rna-seq-analysis",
    "href": "resources.html#r-packages-rnaseq-and-single-cell-rna-seq-analysis",
    "title": "Resources",
    "section": "R Packages RNASeq and Single-cell RNA-seq Analysis",
    "text": "R Packages RNASeq and Single-cell RNA-seq Analysis\n\nDESeq2: DESeq2 is a widely used package for differential gene expression analysis in RNA-seq data.\nedgeR: edgeR is another popular package for differential gene expression analysis in RNA-seq data.\nlimma: limma is a package commonly used for the analysis of microarray and RNA-seq data, particularly for differential expression analysis.\nBallgown: Ballgown is a package for differential expression analysis and visualization of transcriptome assembly data.\nDEXSeq: DEXSeq is specifically designed for the detection of differential exon usage in RNA-seq data.\nNOISeq: NOISeq is a package for non-parametric analysis of differential expression in RNA-seq data.\nclusterProfiler: clusterProfiler is a package for functional enrichment analysis of gene clusters derived from RNA-seq data.\nGenomicFeatures: GenomicFeatures provides tools for working with genomic features, such as gene models, and is useful for annotating RNA-seq data.\nSeurat: Seurat is a package for single-cell RNA-seq data analysis, allowing exploration and visualization of cellular heterogeneity."
  },
  {
    "objectID": "resources.html#blogs-for-r-programming-statistics-and-data-analyis",
    "href": "resources.html#blogs-for-r-programming-statistics-and-data-analyis",
    "title": "Resources",
    "section": "Blogs for R Programming, Statistics, and Data Analyis",
    "text": "Blogs for R Programming, Statistics, and Data Analyis\n\nProgramiz - https://www.datamentor.io/r-programming/\nPennState STAT 484 - https://online.stat.psu.edu/stat484/\nPennState Topics in R Statistical Language - https://online.stat.psu.edu/stat484/\nSimply Statistics - https://simplystatistics.org/\nTutorialPoint - https://www.tutorialspoint.com/r/index.htm\nR for Biologists - https://www.rforbiologists.org/\nComputational Genomics with R - https://compgenomr.github.io/book/\nStat and R - https://statsandr.com/\nRafa Lab - https://rafalab.github.io/pages/harvardx.html\nUniversity of Florida - https://bolt.mph.ufl.edu/software/r-phc-6055/"
  },
  {
    "objectID": "resources.html#videos",
    "href": "resources.html#videos",
    "title": "Resources",
    "section": "Videos",
    "text": "Videos\n\nWelcome to the ‚ÄúR for Research‚Äù series! In this video, we will dive into the fundamentals of R, a powerful programming language and environment widely used in research and data analysis.R provides comprehensive tools and packages for statistical analysis, data visualization, and data manipulation. Whether you‚Äôre a biologist, social scientist, or any researcher looking to harness the power of data, this series will equip you with the necessary skills to leverage R for your research projects.! Check it out: \nIn Part 2, we will continue our exploration of the fundamentals of R, building upon the knowledge gained in Part 1. This video will cover additional essential topics to further enhance your skills in using R for research and data analysis. Check it out:"
  },
  {
    "objectID": "setup.html",
    "href": "setup.html",
    "title": "Install R and RStudio",
    "section": "",
    "text": "R is a powerful analytical language and contains a number of useful packages for analyzing data.\nRStudio is a free and open-source integrated development environment (IDE) for R. RStudio provides comprehensive facilities to R programmers and is highly recommended in this class."
  },
  {
    "objectID": "setup.html#installing-r",
    "href": "setup.html#installing-r",
    "title": "Install R and RStudio",
    "section": "Installing R",
    "text": "Installing R\nWe recommend installing the most recent version or R ‚Äì 4.2.3 as of March 18, 2023 If you have had installed R already some time ago, we recommend updating/reinstalling it to the most recent version. Use a link below to launch download of R installers (if the download does not start, a fix may be to copy-paste the below link to your browser):\n\nFor Mac users: https://cran.r-project.org/bin/macosx/\nFor Windows users: https://cran.r-project.org/bin/windows/base/R-4.2.3-win.exe\nFor Ubuntu users: https://cran.r-project.org/bin/linux/ubuntu/\n\nFor other operating systems, or if you prefer to access the download link from the official website, visit http://cran.us.r-project.org and select Download R for Linux, Download R for macOS or Download R for Windows based on which device you have.\nOnce the proper installation package has been selected, run the package and follow the on-screen directions. This installation includes the R language and a graphical user interface (GUI). Rather using the GUI, we recommend installing RStudio - an integrated development environment (IDE) that lets you interact with R with some added benefits."
  },
  {
    "objectID": "setup.html#installing-rstudio",
    "href": "setup.html#installing-rstudio",
    "title": "Install R and RStudio",
    "section": "Installing RStudio",
    "text": "Installing RStudio\nTo install RStudio, visit https://posit.co/download/rstudio-desktop/. Once on the website, select DOWNLOAD tab (upper left corner), scroll down and click Download under the RStudio Desktop ‚Äì Free version (1st out of 4 columns), and select the proper installation file for your platform (Windows or Mac).\nWhen you open up RStudio, it should look like this:\n\nClick the top left button to create a new script:\n\nRStudio, should now look like this:\n\nThere are four main windows.\n\nThe console is the lower-left window where you can run lines of code and see the output.\nThe script window is the upper-left window where you can edit and write scripts or markdown documents. From the script window, you can run the current line of code in your script (or multiple lines if you highlight multiple rows) by pressing\n\nCMD + Return on Mac\nCTRL + Enter on Windows\n\nThe workspace is the upper-right window where you can manage your data and variables and see previous commands entered (under the history tab).\nThe plots window allows you to see the output of plots. On the other tabs, you can also look at directories, install packages, and look at help files for various R commands.\n\nYou can customize the look of your RStudio IDE in Tools &gt; Global Options...."
  },
  {
    "objectID": "setup.html#r-packages",
    "href": "setup.html#r-packages",
    "title": "Install R and RStudio",
    "section": "R Packages",
    "text": "R Packages\nPackages are the fundamental units of reproducible R code. They are collections of R code that typically share some common purpose. Examples:\n\ndplyr - package of functions for fast data set manipulation (subsetting, summarizing, rearranging, and joining together data sets);\nggplot2 - ‚ÄúR‚Äôs famous package for making beautiful graphics‚Äù; allows to build multiple-layers, highly customizable plots."
  },
  {
    "objectID": "setup.html#installing-and-loading-r-packages",
    "href": "setup.html#installing-and-loading-r-packages",
    "title": "Install R and RStudio",
    "section": "Installing and Loading R Packages",
    "text": "Installing and Loading R Packages\n\nTo install an R package, type in the RStudio console\ninstall.packages(\"replace_with_package_name\")\nand press enter to execute the command.\nOnce a package is installed, to use its contents in current R session, we run in the RStudio console the command\nlibrary(replace_with_package_name)\n\n(Note the difference in presence of the quotation mark in the two above commands.)"
  },
  {
    "objectID": "q-and-a.html",
    "href": "q-and-a.html",
    "title": "FAQs - TCGA Data Analysis with R",
    "section": "",
    "text": "Q1: Q1: What is TCGA?\nThe Cancer Genome Atlas (TCGA) is a large-scale collaborative project that aimed to comprehensively characterize genomic and molecular alterations in various types of cancer. It provided an extensive collection of multi-omics data, including gene expression, DNA methylation, miRNA expression, copy number variation, and clinical information for thousands of tumor samples across multiple cancer types.\nQ2: What types of data are available in TCGA?\nTCGA offers a diverse range of data types, including gene expression data, DNA methylation data, microRNA expression data, copy number variation data, somatic mutation data, and clinical information such as patient demographics, tumor stage, treatment information, and survival outcomes.\nQ3: How can I access TCGA data using R?\nYou can access TCGA data using R through the TCGAbiolinks package. TCGAbiolinks provides functionalities to download and preprocess TCGA data directly from the TCGA data portal, allowing you to quickly access and analyze the datasets in R.\nQ4: What are some common R packages used in TCGA data analysis?\nSome common R packages used in TCGA data analysis include TCGAbiolinks (for data retrieval and preprocessing), dplyr (for data manipulation), ggplot2 (for data visualization), limma, edgeR, and DESeq2 (for differential gene expression analysis), and survival and survminer (for survival analysis).\nQ5: Can I integrate multiple data types from TCGA in my analysis?\nYes, you can integrate multiple data types from TCGA, such as gene expression, DNA methylation, and miRNA expression data. Integrating multiple omics data types can provide a more comprehensive understanding of the molecular mechanisms underlying cancer.\nQ6: Do I need prior knowledge of cancer biology to take this course?\nWhile prior knowledge of cancer biology is recommended, it is not a strict requirement. The course assumes some familiarity with genomics concepts and R programming. Basic explanations of cancer biology concepts relevant to the analysis will be provided during the course.\nQ7: How will the course be conducted? The course will be a combination of lectures, hands-on practical sessions, and interactive discussions. Participants will have access to real TCGA datasets and will be guided through step-by-step analysis using R.\nQ8: What will be the format of the practical sessions? The practical sessions will involve working with real TCGA datasets in R. Participants will be given coding exercises and tutorials to practice data preprocessing, analysis, and visualization using R.\nQ9: Will the course cover best practices for reproducible research? Yes, the course will emphasize the importance of reproducible research. Participants will be introduced to best practices for documenting their analysis and code to ensure transparency and replicability of their findings.\nQ10: Can I apply the skills learned in the course to my own research projects?\nAbsolutely! The skills and knowledge gained from the course can be directly applied to independent research projects involving TCGA data analysis. Participants will be well-equipped to continue their analysis beyond the scope of the course."
  },
  {
    "objectID": "about.html#instructor",
    "href": "about.html#instructor",
    "title": "About",
    "section": "Instructor",
    "text": "Instructor\n\nBio\n\nHi, I am Jubayer, a highly motivated biomedical research enthusiasts with a Master of Science in Microbiology focus on public health and health data science. Research experience designing and implementing projects for biomedical data analysis (including next‚Äëgeneration sequencing, RNA‚Äëseq , and ssRNA‚Äëseq ). I am interested in applying machine learning/deep learning tools and techniques in the context of disease diagnosis and large data analytics for public health while focusing on bridging the gap between computational and experimental laboratories through highly engaging and fruitful collaborations\nPython is my primary language for data analysis and machine learning. I also have a basic understanding of R, Julia, SPSS, QGIS, and SQL.\nThis page highlights my teaching and research projects. Please reach out if you want to collaborate or have questions.\n\n\nSkills\nProgramming Languages: Python, R, SQL, Julia, JavaScript; Data Science: scikit-learn, PyCaret, Dask, PySpark; GIS & Remote Sensing: ArcGIS, Geopandas, Xarray, Giovani; Analytics Softwares: SPSS, PowerBI, Microsoft Excel; Survey Tools: RedCap, KoboToolBox, EpiCollect, Google Forms; Academic Writing Tools: Microsoft Word, LaTeX, Mendeley; Bioinformatics: BioPython, Bioconductor, BioPandas, Galaxy, NGS, RNASeq, ssRNASeq; Miscellaneous Skills: UNIX, Version Control(Git), Web Scraping, APIs.\n\n\nSelected Publications\n\nHossain, M.J., Islam, M.W., Munni, U.R. et al.¬†Health-related quality of life among thalassemia patients in Bangladesh using the SF-36 questionnaire. Scientific Reports 13, 7734 (2023). https://doi.org/10.1038/s41598-023-34205-9\nTowhid, S. T., Hossain, M. J., Sammo, M. A. S., & Akter, S. (2022). Perception of Students on Antibiotic Resistance and Prevention: An Online, Community-Based Case Study from Dhaka, Bangladesh. European Journal of Biology and Biotechnology, 3(3), 14‚Äì19. https://doi.org/10.24018/ejbio.2022.3.3.341\nHossain, M.J., Towhid ST, Sultana S, Mukta SA, Gulshan R, Miah MS (2022). Knowledge and Attitudes towards Thalassemia among Public University Students in Bangladesh. Microbial Bioactives, 5(2), https://doi.org/10.25163/microbbioacts.526325."
  },
  {
    "objectID": "setup-guide.html",
    "href": "setup-guide.html",
    "title": "Setup Guide: Install R and RStudio",
    "section": "",
    "text": "R is a powerful analytical language and contains a number of useful packages for analyzing data.\nRStudio is a free and open-source integrated development environment (IDE) for R. RStudio provides comprehensive facilities to R programmers and is highly recommended in this class."
  },
  {
    "objectID": "setup-guide.html#installing-r",
    "href": "setup-guide.html#installing-r",
    "title": "Setup Guide: Install R and RStudio",
    "section": "Installing R\n",
    "text": "Installing R\n\nWe recommend installing the most recent version or R ‚Äì 4.2.3 as of March 18, 2023 If you have had installed R already some time ago, we recommend updating/reinstalling it to the most recent version. Use a link below to launch download of R installers (if the download does not start, a fix may be to copy-paste the below link to your browser):\n\nFor Mac users: https://cran.r-project.org/bin/macosx/\nFor Windows users: https://cran.r-project.org/bin/windows/base/R-4.2.3-win.exe\nFor Ubuntu users: https://cran.r-project.org/bin/linux/ubuntu/\n\nFor other operating systems, or if you prefer to access the download link from the official website, visit http://cran.us.r-project.org and select Download R for Linux, Download R for macOS or Download R for Windows based on which device you have.\nOnce the proper installation package has been selected, run the package and follow the on-screen directions. This installation includes the R language and a graphical user interface (GUI). Rather using the GUI, we recommend installing RStudio - an integrated development environment (IDE) that lets you interact with R with some added benefits."
  },
  {
    "objectID": "setup-guide.html#installing-rstudio",
    "href": "setup-guide.html#installing-rstudio",
    "title": "Setup Guide: Install R and RStudio",
    "section": "Installing RStudio\n",
    "text": "Installing RStudio\n\nTo install RStudio, visit https://posit.co/download/rstudio-desktop/. Once on the website, select DOWNLOAD tab (upper left corner), scroll down and click Download under the RStudio Desktop ‚Äì Free version (1st out of 4 columns), and select the proper installation file for your platform (Windows or Mac).\nWhen you open up RStudio, it should look like this:\n\nClick the top left button to create a new script:\n\nRStudio, should now look like this:\n\nThere are four main windows.\n\nThe console is the lower-left window where you can run lines of code and see the output.\n\nThe script window is the upper-left window where you can edit and write scripts or markdown documents. From the script window, you can run the current line of code in your script (or multiple lines if you highlight multiple rows) by pressing\n\n\nCMD + Return on Mac\n\nCTRL + Enter on Windows\n\n\nThe workspace is the upper-right window where you can manage your data and variables and see previous commands entered (under the history tab).\nThe plots window allows you to see the output of plots. On the other tabs, you can also look at directories, install packages, and look at help files for various R commands.\n\nYou can customize the look of your RStudio IDE in Tools &gt; Global Options...."
  },
  {
    "objectID": "setup-guide.html#r-packages",
    "href": "setup-guide.html#r-packages",
    "title": "Setup Guide: Install R and RStudio",
    "section": "\nR Packages",
    "text": "R Packages\nPackages are the fundamental units of reproducible R code. They are collections of R code that typically share some common purpose. Examples:\n\ndplyr - package of functions for fast data set manipulation (subsetting, summarizing, rearranging, and joining together data sets);\nggplot2 - ‚ÄúR‚Äôs famous package for making beautiful graphics‚Äù; allows to build multiple-layers, highly customizable plots."
  },
  {
    "objectID": "setup-guide.html#installing-and-loading-r-packages",
    "href": "setup-guide.html#installing-and-loading-r-packages",
    "title": "Setup Guide: Install R and RStudio",
    "section": "Installing and Loading R Packages",
    "text": "Installing and Loading R Packages\n\n\nTo install an R package, type in the RStudio console\ninstall.packages(\"replace_with_package_name\")\nand press enter to execute the command.\n\n\nOnce a package is installed, to use its contents in current R session, we run in the RStudio console the command\nlibrary(replace_with_package_name)\n\n\n(Note the difference in presence of the quotation mark in the two above commands.)"
  },
  {
    "objectID": "setup-guide.html#working-with-r-rstudio",
    "href": "setup-guide.html#working-with-r-rstudio",
    "title": "Setup Guide: Install R and RStudio",
    "section": "Working with R ‚Äì RStudio",
    "text": "Working with R ‚Äì RStudio\nRStudio is an Integrated Development Environment (IDE) for R\n\nIt helps the user effectively use R\nMakes things easier\nIs NOT a dropdown statistical tool (such as Stata)\n\nSee Rcmdr or Radiant\n\n\n\nAll R Studio snapshots are taken from http://ayeimanol-r.net/2013/04/21/289/\n\n\n\n\n\n\n\n\n\n\n[source]"
  },
  {
    "objectID": "setup-guide.html#rstudio",
    "href": "setup-guide.html#rstudio",
    "title": "Setup Guide: Install R and RStudio",
    "section": "RStudio",
    "text": "RStudio\nEasier working with R\n\nSyntax highlighting, code completion, and smart indentation\nEasily manage multiple working directories and projects\n\nMore information\n\nWorkspace browser and data viewer\nPlot history, zooming, and flexible image and file export\nIntegrated R help and documentation\nSearchable command history"
  },
  {
    "objectID": "setup-guide.html#rstudio-1",
    "href": "setup-guide.html#rstudio-1",
    "title": "Setup Guide: Install R and RStudio",
    "section": "RStudio",
    "text": "RStudio"
  },
  {
    "objectID": "setup-guide.html#getting-the-editor",
    "href": "setup-guide.html#getting-the-editor",
    "title": "Setup Guide: Install R and RStudio",
    "section": "Getting the editor",
    "text": "Getting the editor"
  },
  {
    "objectID": "setup-guide.html#working-with-r-in-r-studio---2-major-panes",
    "href": "setup-guide.html#working-with-r-in-r-studio---2-major-panes",
    "title": "Setup Guide: Install R and RStudio",
    "section": "Working with R in R Studio - 2 major panes:",
    "text": "Working with R in R Studio - 2 major panes:\n\nThe Source/Editor: ‚ÄúAnalysis‚Äù Script + Interactive Exploration\n\nStatic copy of what you did (reproducibility)\nTop by default\n\n\nThe R Console: ‚Äúinterprets‚Äù whatever you type\n\nCalculator\nTry things out interactively, then add to your editor\nBottom by default"
  },
  {
    "objectID": "setup-guide.html#source-editor",
    "href": "setup-guide.html#source-editor",
    "title": "Setup Guide: Install R and RStudio",
    "section": "Source / Editor",
    "text": "Source / Editor\n\nWhere files open to\nHave R code and comments in them\nCan highlight and press (CMD+Enter (Mac) or Ctrl+Enter (Windows)) to run the code\n\nIn a .R file (we call a script), code is saved on your disk"
  },
  {
    "objectID": "setup-guide.html#r-console",
    "href": "setup-guide.html#r-console",
    "title": "Setup Guide: Install R and RStudio",
    "section": "R Console",
    "text": "R Console\n\n\n\n\n\n\n\n\n\n\nWhere code is executed (where things happen)\nYou can type here for things interactively\nCode is not saved on your disk"
  },
  {
    "objectID": "setup-guide.html#rstudio-2",
    "href": "setup-guide.html#rstudio-2",
    "title": "Setup Guide: Install R and RStudio",
    "section": "RStudio",
    "text": "RStudio\nSuper useful ‚Äúcheat sheet‚Äù: https://github.com/rstudio/cheatsheets/raw/master/rstudio-ide.pdf"
  },
  {
    "objectID": "setup-guide.html#rstudio-layout",
    "href": "setup-guide.html#rstudio-layout",
    "title": "Setup Guide: Install R and RStudio",
    "section": "RStudio layout",
    "text": "RStudio layout"
  },
  {
    "objectID": "setup-guide.html#rstudio-layout-1",
    "href": "setup-guide.html#rstudio-layout-1",
    "title": "Setup Guide: Install R and RStudio",
    "section": "RStudio Layout",
    "text": "RStudio Layout\nIf RStudio doesn‚Äôt look the way you want (or like our RStudio), then do:\nRStudio ‚Äì&gt; Preferences ‚Äì&gt; Pane Layout"
  },
  {
    "objectID": "setup-guide.html#workspaceenvironment",
    "href": "setup-guide.html#workspaceenvironment",
    "title": "Setup Guide: Install R and RStudio",
    "section": "Workspace/Environment",
    "text": "Workspace/Environment"
  },
  {
    "objectID": "setup-guide.html#workspaceenvironment-1",
    "href": "setup-guide.html#workspaceenvironment-1",
    "title": "Setup Guide: Install R and RStudio",
    "section": "Workspace/Environment",
    "text": "Workspace/Environment\n\nTells you what objects are in R\nWhat exists in memory/what is loaded?/what did I read in?\n\nHistory\n\nShows previous commands. Good to look at for debugging, but don‚Äôt rely on it.\nInstead use RMarkdown!\nAlso type the ‚Äúup‚Äù key in the Console to scroll through previous commands"
  },
  {
    "objectID": "setup-guide.html#other-panes",
    "href": "setup-guide.html#other-panes",
    "title": "Setup Guide: Install R and RStudio",
    "section": "Other Panes",
    "text": "Other Panes\n\n\nFiles - shows the files on your computer of the directory you are working in\n\nViewer - can view data or R objects\n\nHelp - shows help of R commands\n\nPlots - pictures and figures\n\nPackages - list of R packages that are loaded in memory"
  },
  {
    "objectID": "setup-guide.html#r-markdown-file",
    "href": "setup-guide.html#r-markdown-file",
    "title": "Setup Guide: Install R and RStudio",
    "section": "R Markdown file",
    "text": "R Markdown file\nR Markdown files (.Rmd) help generate reports that include your code and output. Think of them as fancier scripts.\n\nHelps you describe your code\nAllows you to check the output\nCan create many different file types"
  },
  {
    "objectID": "setup-guide.html#create-an-r-markdown-file",
    "href": "setup-guide.html#create-an-r-markdown-file",
    "title": "Setup Guide: Install R and RStudio",
    "section": "Create an R Markdown file",
    "text": "Create an R Markdown file\nGo to File ‚Üí New File ‚Üí R Markdown\nCall your file ‚Äúfirst_markdown‚Äù"
  },
  {
    "objectID": "setup-guide.html#code-chunks",
    "href": "setup-guide.html#code-chunks",
    "title": "Setup Guide: Install R and RStudio",
    "section": "Code chunks",
    "text": "Code chunks\nWithin R Markdown files are code ‚Äúchunks‚Äù\nThis is where you can type R code and run it!"
  },
  {
    "objectID": "setup-guide.html#create-chunks",
    "href": "setup-guide.html#create-chunks",
    "title": "Setup Guide: Install R and RStudio",
    "section": "Create Chunks",
    "text": "Create Chunks\nTo create a new R code chunk:\nCopy paste an existing chunk in the R Markdown file and replace the code OR\n\nUse the insert code chunk button at the top of RStudio.\n\n\n\n\n\n\n\n\n\n\nSelect R as the language:"
  },
  {
    "objectID": "setup-guide.html#run-previous-chunks-button",
    "href": "setup-guide.html#run-previous-chunks-button",
    "title": "Setup Guide: Install R and RStudio",
    "section": "Run previous chunks button",
    "text": "Run previous chunks button\nYou can run all chunks above a specific chunk using this button:"
  },
  {
    "objectID": "setup-guide.html#chunk-settings",
    "href": "setup-guide.html#chunk-settings",
    "title": "Setup Guide: Install R and RStudio",
    "section": "Chunk settings",
    "text": "Chunk settings"
  },
  {
    "objectID": "setup-guide.html#chunk-settings-1",
    "href": "setup-guide.html#chunk-settings-1",
    "title": "Setup Guide: Install R and RStudio",
    "section": "Chunk settings",
    "text": "Chunk settings\nYou can specify if a chunk will be seen in the report or not."
  },
  {
    "objectID": "setup-guide.html#knit-file-to-html",
    "href": "setup-guide.html#knit-file-to-html",
    "title": "Setup Guide: Install R and RStudio",
    "section": "Knit file to html",
    "text": "Knit file to html\nThis will create a report from the R Markdown document!"
  },
  {
    "objectID": "setup-guide.html#useful-r-studio-shortcuts",
    "href": "setup-guide.html#useful-r-studio-shortcuts",
    "title": "Setup Guide: Install R and RStudio",
    "section": "Useful R Studio Shortcuts",
    "text": "Useful R Studio Shortcuts\n\n\nCtrl + Enter in your script evaluates that line of code\n\nIt‚Äôs like copying and pasting the code into the console for it to run.\n\n\n\nCtrl+1 takes you to the script page\n\nCtrl+2 takes you to the console\nhttp://www.rstudio.com/ide/docs/using/keyboard_shortcuts"
  },
  {
    "objectID": "prework.html#major-concepts",
    "href": "prework.html#major-concepts",
    "title": "Preparation",
    "section": "Major concepts",
    "text": "Major concepts\n\nPackage - a package in R is a bundle or ‚Äúpackage‚Äù of code (and or possibly data) that can be loaded together for easy repeated use or for sharing with others.\nFunction - a function is a particular piece of code that allows you to do something in R. You can write your own, use functions that come directly from installing R, or use functions from additional packages.\nArgument - an option that you specify to a function.\nObject - an object is something that can be worked with in R - can be lots of different things!\nVariable something measured or counted that is a characteristic about a sample.\nSample individuals that you have data about - e.g.¬†people, houses, viruses etc.\n\nData frames A collection of variables and samples in a row/column format. Sample = Row, Variable = Column\nTidyverse - This is a newer set of packages designed for data science that can make your code more intuitive as compared to the original older Base R."
  },
  {
    "objectID": "prework.html#functions",
    "href": "prework.html#functions",
    "title": "Preparation",
    "section": "Functions",
    "text": "Functions\n\n\n\nLibrary/Package\nPiece of code\nExample of usage\nWhat it does\n\n\n\n\nBase R\ninstall.packages()\ninstall.packages(\"remotes\")\nInstalls packages\n\n\nBase R\nlibrary()\nlibrary(remotes)\nLoads and attaches additional packages to the R environment."
  },
  {
    "objectID": "prework.html#rstudio---major-concepts",
    "href": "prework.html#rstudio---major-concepts",
    "title": "Preparation",
    "section": "RStudio - Major concepts",
    "text": "RStudio - Major concepts\n\nRStudio - an Integrated Development Environment (IDE) for R - makes it easier to use R.\nSource/Editor - ‚ÄúAnalysis‚Äù Script + Interactive Exploration - In a .R file (we call a script), code is saved on your disk\nR Console - Where code is executed (where things happen) - Code is not saved on your disk\nWorkspace/Environment - Tells you what objects are in R. What exists in memory/what is loaded?/what did I read in?\nR Markdown - Files (.Rmd) help generate reports that include your code and output.\nR Project - Helps you organize your work. Helps with working directories (discussed later). Allows you to easily know which project you‚Äôre on.\nRStudio Keyboard shortcuts"
  },
  {
    "objectID": "prework.html#functions-1",
    "href": "prework.html#functions-1",
    "title": "Preparation",
    "section": "Functions",
    "text": "Functions\n\n\n\nLibrary/Package\nPiece of code\nExample of usage\nWhat it does\n\n\n\n\nBase R\nView()\nView(mtcars)\nallows you to view data in a spreadsheet format.\n\n\nBase R\nhead()\nhead(mtcars)\nReturns the top 6 rows of an object in the environment by default. You can specify how many rows you want by including the n =argument.\n\n\nBase R\ntail()\ntail(mtcars)\nReturns the bottom 6 rows of an object in the environment by default. You can specify how many rows you want by including the n = argument."
  },
  {
    "objectID": "prework.html#reproducibility---major-concepts",
    "href": "prework.html#reproducibility---major-concepts",
    "title": "Preparation",
    "section": "Reproducibility - Major concepts",
    "text": "Reproducibility - Major concepts\n\nReproducibility - A different analyst re-performs the analysis with the same code and the same data and obtains the same result.\nRepeatable - keeping everything the same but repeating the analysis - do we get the same results\nReproducible - using the same data and analysis but in the hands of another researcher - do we get the same results?\nReplicable - with new data do we obtain the same inferences?"
  },
  {
    "objectID": "prework.html#functions-2",
    "href": "prework.html#functions-2",
    "title": "Preparation",
    "section": "Functions",
    "text": "Functions\n\n\n\nLibrary/Package\nPiece of code\nExample of usage\nWhat it does\n\n\n\n\nBase R\nsessionInfo()\nsessionInfo()\nReturns the R version information, the OS, and the attached packages in the current R session.\n\n\n\n\nMore resources\n\nThe RMarkdown book\nJenny Bryan‚Äôs organizational strategies.\nWrite efficient R code for science.\nReproducibility in Cancer Informatics course"
  },
  {
    "objectID": "cheatsheet.html",
    "href": "cheatsheet.html",
    "title": "Cheatsheet",
    "section": "",
    "text": "Package - a package in R is a bundle or ‚Äúpackage‚Äù of code (and or possibly data) that can be loaded together for easy repeated use or for sharing with others.\nFunction - a function is a particular piece of code that allows you to do something in R. You can write your own, use functions that come directly from installing R, or use functions from additional packages.\nArgument - an option that you specify to a function.\nObject - an object is something that can be worked with in R - can be lots of different things!\nVariable something measured or counted that is a characteristic about a sample.\nSample individuals that you have data about - e.g.¬†people, houses, viruses etc.\n\nData frames A collection of variables and samples in a row/column format. Sample = Row, Variable = Column\nTidyverse - This is a newer set of packages designed for data science that can make your code more intuitive as compared to the original older Base R.\n\n\n\n\n\n\n\nLibrary/Package\nPiece of code\nExample of usage\nWhat it does\n\n\n\n\nBase R\ninstall.packages()\ninstall.packages(\"remotes\")\nInstalls packages\n\n\nBase R\nlibrary()\nlibrary(remotes)\nLoads and attaches additional packages to the R environment.\n\n\n\n\n\n\n\n\n\n\n\n\n\nRStudio - an Integrated Development Environment (IDE) for R - makes it easier to use R.\nSource/Editor - ‚ÄúAnalysis‚Äù Script + Interactive Exploration - In a .R file (we call a script), code is saved on your disk\nR Console - Where code is executed (where things happen) - Code is not saved on your disk\nWorkspace/Environment - Tells you what objects are in R. What exists in memory/what is loaded?/what did I read in?\nR Markdown - Files (.Rmd) help generate reports that include your code and output.\nR Project - Helps you organize your work. Helps with working directories (discussed later). Allows you to easily know which project you‚Äôre on.\nRStudio Keyboard shortcuts\n\n\n\n\n\n\n\nLibrary/Package\nPiece of code\nExample of usage\nWhat it does\n\n\n\n\nBase R\nView()\nView(mtcars)\nallows you to view data in a spreadsheet format.\n\n\nBase R\nhead()\nhead(mtcars)\nReturns the top 6 rows of an object in the environment by default. You can specify how many rows you want by including the n =argument.\n\n\nBase R\ntail()\ntail(mtcars)\nReturns the bottom 6 rows of an object in the environment by default. You can specify how many rows you want by including the n = argument.\n\n\n\n\n\n\n\n\n\n\n\n\n\nReproducibility - A different analyst re-performs the analysis with the same code and the same data and obtains the same result.\nRepeatable - keeping everything the same but repeating the analysis - do we get the same results\nReproducible - using the same data and analysis but in the hands of another researcher - do we get the same results?\nReplicable - with new data do we obtain the same inferences?\n\n\n\n\n\n\n\nLibrary/Package\nPiece of code\nExample of usage\nWhat it does\n\n\n\n\nBase R\nsessionInfo()\nsessionInfo()\nReturns the R version information, the OS, and the attached packages in the current R session.\n\n\n\n\n\n\n\nThe RMarkdown book\nJenny Bryan‚Äôs organizational strategies.\nWrite efficient R code for science.\nReproducibility in Cancer Informatics course"
  },
  {
    "objectID": "cheatsheet.html#major-concepts",
    "href": "cheatsheet.html#major-concepts",
    "title": "Cheatsheet",
    "section": "",
    "text": "Package - a package in R is a bundle or ‚Äúpackage‚Äù of code (and or possibly data) that can be loaded together for easy repeated use or for sharing with others.\nFunction - a function is a particular piece of code that allows you to do something in R. You can write your own, use functions that come directly from installing R, or use functions from additional packages.\nArgument - an option that you specify to a function.\nObject - an object is something that can be worked with in R - can be lots of different things!\nVariable something measured or counted that is a characteristic about a sample.\nSample individuals that you have data about - e.g.¬†people, houses, viruses etc.\n\nData frames A collection of variables and samples in a row/column format. Sample = Row, Variable = Column\nTidyverse - This is a newer set of packages designed for data science that can make your code more intuitive as compared to the original older Base R."
  },
  {
    "objectID": "cheatsheet.html#functions",
    "href": "cheatsheet.html#functions",
    "title": "Cheatsheet",
    "section": "",
    "text": "Library/Package\nPiece of code\nExample of usage\nWhat it does\n\n\n\n\nBase R\ninstall.packages()\ninstall.packages(\"remotes\")\nInstalls packages\n\n\nBase R\nlibrary()\nlibrary(remotes)\nLoads and attaches additional packages to the R environment."
  },
  {
    "objectID": "cheatsheet.html#rstudio---major-concepts",
    "href": "cheatsheet.html#rstudio---major-concepts",
    "title": "Cheatsheet",
    "section": "",
    "text": "RStudio - an Integrated Development Environment (IDE) for R - makes it easier to use R.\nSource/Editor - ‚ÄúAnalysis‚Äù Script + Interactive Exploration - In a .R file (we call a script), code is saved on your disk\nR Console - Where code is executed (where things happen) - Code is not saved on your disk\nWorkspace/Environment - Tells you what objects are in R. What exists in memory/what is loaded?/what did I read in?\nR Markdown - Files (.Rmd) help generate reports that include your code and output.\nR Project - Helps you organize your work. Helps with working directories (discussed later). Allows you to easily know which project you‚Äôre on.\nRStudio Keyboard shortcuts"
  },
  {
    "objectID": "cheatsheet.html#functions-1",
    "href": "cheatsheet.html#functions-1",
    "title": "Cheatsheet",
    "section": "",
    "text": "Library/Package\nPiece of code\nExample of usage\nWhat it does\n\n\n\n\nBase R\nView()\nView(mtcars)\nallows you to view data in a spreadsheet format.\n\n\nBase R\nhead()\nhead(mtcars)\nReturns the top 6 rows of an object in the environment by default. You can specify how many rows you want by including the n =argument.\n\n\nBase R\ntail()\ntail(mtcars)\nReturns the bottom 6 rows of an object in the environment by default. You can specify how many rows you want by including the n = argument."
  },
  {
    "objectID": "cheatsheet.html#reproducibility---major-concepts",
    "href": "cheatsheet.html#reproducibility---major-concepts",
    "title": "Cheatsheet",
    "section": "",
    "text": "Reproducibility - A different analyst re-performs the analysis with the same code and the same data and obtains the same result.\nRepeatable - keeping everything the same but repeating the analysis - do we get the same results\nReproducible - using the same data and analysis but in the hands of another researcher - do we get the same results?\nReplicable - with new data do we obtain the same inferences?"
  },
  {
    "objectID": "cheatsheet.html#functions-2",
    "href": "cheatsheet.html#functions-2",
    "title": "Cheatsheet",
    "section": "",
    "text": "Library/Package\nPiece of code\nExample of usage\nWhat it does\n\n\n\n\nBase R\nsessionInfo()\nsessionInfo()\nReturns the R version information, the OS, and the attached packages in the current R session.\n\n\n\n\n\n\nThe RMarkdown book\nJenny Bryan‚Äôs organizational strategies.\nWrite efficient R code for science.\nReproducibility in Cancer Informatics course"
  },
  {
    "objectID": "cheatsheet.html#intro",
    "href": "cheatsheet.html#intro",
    "title": "Cheatsheet",
    "section": "",
    "text": "Package - a package in R is a bundle or ‚Äúpackage‚Äù of code (and or possibly data) that can be loaded together for easy repeated use or for sharing with others.\nFunction - a function is a particular piece of code that allows you to do something in R. You can write your own, use functions that come directly from installing R, or use functions from additional packages.\nArgument - an option that you specify to a function.\nObject - an object is something that can be worked with in R - can be lots of different things!\nVariable something measured or counted that is a characteristic about a sample.\nSample individuals that you have data about - e.g.¬†people, houses, viruses etc.\n\nData frames A collection of variables and samples in a row/column format. Sample = Row, Variable = Column\nTidyverse - This is a newer set of packages designed for data science that can make your code more intuitive as compared to the original older Base R.\n\n\n\n\n\n\n\nLibrary/Package\nPiece of code\nExample of usage\nWhat it does\n\n\n\n\nBase R\ninstall.packages()\ninstall.packages(\"remotes\")\nInstalls packages\n\n\nBase R\nlibrary()\nlibrary(remotes)\nLoads and attaches additional packages to the R environment."
  },
  {
    "objectID": "cheatsheet.html#rstudio",
    "href": "cheatsheet.html#rstudio",
    "title": "Cheatsheet",
    "section": "",
    "text": "RStudio - an Integrated Development Environment (IDE) for R - makes it easier to use R.\nSource/Editor - ‚ÄúAnalysis‚Äù Script + Interactive Exploration - In a .R file (we call a script), code is saved on your disk\nR Console - Where code is executed (where things happen) - Code is not saved on your disk\nWorkspace/Environment - Tells you what objects are in R. What exists in memory/what is loaded?/what did I read in?\nR Markdown - Files (.Rmd) help generate reports that include your code and output.\nR Project - Helps you organize your work. Helps with working directories (discussed later). Allows you to easily know which project you‚Äôre on.\nRStudio Keyboard shortcuts\n\n\n\n\n\n\n\nLibrary/Package\nPiece of code\nExample of usage\nWhat it does\n\n\n\n\nBase R\nView()\nView(mtcars)\nallows you to view data in a spreadsheet format.\n\n\nBase R\nhead()\nhead(mtcars)\nReturns the top 6 rows of an object in the environment by default. You can specify how many rows you want by including the n =argument.\n\n\nBase R\ntail()\ntail(mtcars)\nReturns the bottom 6 rows of an object in the environment by default. You can specify how many rows you want by including the n = argument."
  },
  {
    "objectID": "cheatsheet.html#reproducibility",
    "href": "cheatsheet.html#reproducibility",
    "title": "Cheatsheet",
    "section": "",
    "text": "Reproducibility - A different analyst re-performs the analysis with the same code and the same data and obtains the same result.\nRepeatable - keeping everything the same but repeating the analysis - do we get the same results\nReproducible - using the same data and analysis but in the hands of another researcher - do we get the same results?\nReplicable - with new data do we obtain the same inferences?\n\n\n\n\n\n\n\nLibrary/Package\nPiece of code\nExample of usage\nWhat it does\n\n\n\n\nBase R\nsessionInfo()\nsessionInfo()\nReturns the R version information, the OS, and the attached packages in the current R session.\n\n\n\n\n\n\n\nThe RMarkdown book\nJenny Bryan‚Äôs organizational strategies.\nWrite efficient R code for science.\nReproducibility in Cancer Informatics course"
  },
  {
    "objectID": "cheatsheet.html#basic-r",
    "href": "cheatsheet.html#basic-r",
    "title": "Cheatsheet",
    "section": "Basic R",
    "text": "Basic R\n\nMajor concepts\n\nPackage - a package in R is a bundle or ‚Äúpackage‚Äù of code (and or possibly data) that can be loaded together for easy repeated use or for sharing with others.\nThe R console is a full calculator:\n\n+, -, /, * are add, subtract, divide and multiply\n^ or ** is power\nparentheses ‚Äì ( and ) ‚Äì work with order of operations\n%% finds the remainder\n\n# is the comment symbol; nothing to its right is evaluated.\n\n\n\nFunctions\n\n\n\nLibrary/Package\nPiece of code\nExample of usage\nWhat it does\n\n\n\n\nBase R\n&lt;-\nx &lt;- 1\nAssigns a name to something in the R environment.\n\n\nBase R\nc()\nx &lt;- c(1, 3)\nCombines values into a vector or list.\n\n\nBase R\nstr(x)\nstr(x)\nGets a summary of the object x structure.\n\n\nBase R\nclass(x)\nclass(x)\nReturns the type of the values in object x.\n\n\nBase R\nprint(x)\nprint(x)\nPrints out contents of x.\n\n\nBase R\nlength(x)\nlength(x)\nReturns how long the object x is."
  },
  {
    "objectID": "cheatsheet.html#data-inputoutput",
    "href": "cheatsheet.html#data-inputoutput",
    "title": "Cheatsheet",
    "section": "Data Input/Output",
    "text": "Data Input/Output\n\nMajor concepts\n\nDelimited file - columns within the file have boundaries created with some type of punctuation - for example, a csv file stands for comma separated values, thus the columns are delimited or separated by commas. txt files often use tabs.\ntibble ‚Äì a rectangular data frame, where data are split into rows and columns.\nFile path - where a file lives on your computer (or on the internet) - File paths can be relative or absolute.\nGetting help - For any function, you can write ?FUNCTION_NAME, or help(\"FUNCTION_NAME\") to look at the help file for that function.\nR Projects set the working directory where the .Rproj file is.\nR Markdown files look for file paths relative to where the .Rmd file is located\n\n\n\nFunctions\n\n\n\nLibrary/Package\nPiece of code\nExample of usage\nWhat it does\n\n\n\n\nreadr\nread_csv()\ndf &lt;- read_csv(\"http://jhudatascience.org/intro_to_R_class/data/Youth_Tobacco_Survey_YTS_Data.csv\")\nReads in a TSV file from a specified file path. This function can be tailored to read in other common types of files. i.e.¬†read_csv(), read_rds(), etc.\n\n\nTSA\nspec()|spec(mtcars)| Gives specification of column types| |readxl| [read_excel()](https://www.rdocumentation.org/packages/readxl/versions/1.3.1/topics/read_excel)|read_excel(‚Äúdataset.xlsx‚Äù)| Read in an excel file.| | BaseR| [getwd()](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/getwd)|getwd()| Finds the current working directory.| | BaseR| [setwd()](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/getwd)|setwd(‚ÄúDesktop‚Äù)`\nChanges the current working directory."
  },
  {
    "objectID": "resources.html#useful-links",
    "href": "resources.html#useful-links",
    "title": "Resources",
    "section": "",
    "text": "The NCI‚Äôs Genomic Data Commons (GDC): https://gdc.cancer.gov/\nTCGAbiolinks package: http://bioconductor.org/packages/TCGAbiolinks/\nmaftools package: http://bioconductor.org/packages/maftools/"
  },
  {
    "objectID": "resources.html#reference-articles",
    "href": "resources.html#reference-articles",
    "title": "Resources",
    "section": "Reference Articles",
    "text": "Reference Articles\n\nTCGAbiolinks:\n\nColaprico, Antonio, et al.¬†‚ÄúTCGAbiolinks: an R/Bioconductor package for integrative analysis of TCGA data.‚Äù Nucleic acids research 44.8 (2015): e71-e71. Silva, Tiago C., et al.¬†‚ÄúTCGA Workflow: Analyze cancer genomics and epigenomics data using Bioconductor packages.‚Äù F1000Research 5 (2016). (https://f1000research.com/articles/5-1542/v2)\nMounir, Mohamed, et al.¬†‚ÄúNew functionalities in the TCGAbiolinks package for the study and integration of cancer data from GDC and GTEx.‚Äù PLoS computational biology 15.3 (2019): e1006701. (https://doi.org/10.1371/journal.pcbi.1006701)\nSilva TC, Colaprico A, Olsen C et al.TCGA Workflow: Analyze cancer genomics and epigenomics data using Bioconductor packages [version 2; peer review: 1 approved, 2 approved with reservations]. F1000Research 2016, 5:1542 (https://doi.org/10.12688/f1000research.8923.2).\n\nThe NCI‚Äôs Genomic Data Commons (GDC):\n\nGao, Galen F., et al.¬†‚ÄúBefore and After: Comparison of Legacy and Harmonized TCGA Genomic Data Commons‚Äô Data.‚Äù Cell systems 9.1 (2019): 24-34. (https://doi.org/10.1016/j.cels.2019.06.006)\n\nMaftools:\n\nMayakonda A, Lin D, Assenov Y, Plass C, Koeffler PH (2018). ‚ÄúMaftools: efficient and comprehensive analysis of somatic variants in cancer.‚Äù Genome Research. https://doi.org/10.1101/gr.239244.118.\n\nComplexheatmap:\n\nGu Z, Eils R, Schlesner M (2016). ‚ÄúComplex heatmaps reveal patterns and correlations in multidimensional genomic data.‚Äù Bioinformatics."
  },
  {
    "objectID": "resources.html#rbioconductor-packages",
    "href": "resources.html#rbioconductor-packages",
    "title": "Resources",
    "section": "R/Bioconductor Packages",
    "text": "R/Bioconductor Packages\n\nTCGAbiolinks\nMultiAssayExperiment\nmaftools\nComplexHeatmap"
  },
  {
    "objectID": "index.html#learning-objectives",
    "href": "index.html#learning-objectives",
    "title": "R for Cancer Bioinformatics",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nMaster the Fundamentals of R: Gain proficiency in basic R programming essential for bioinformatics workflows.\nPerform Data Wrangling with R: Learn to manipulate and prepare large datasets for analysis using R.\nUtilize TCGAbiolinks: Develop skills to efficiently download and manage genomic data from the GDC portal using TCGAbiolinks.\nAnalyze Somatic Mutations with maftools: Acquire the ability to conduct comprehensive somatic mutation analysis using the maftools package.\nConduct Pan-Cancer Downstream Analysis: Explore methods for multi-cancer comparative studies, focusing on BRCA and Low-Grade Glioma (LGG).\nIntegrate Multi-Omic Data: Learn techniques to integrate methylation and expression data, with a focus on Adrenocortical Carcinoma (ACC).\nApply the ELMER Pipeline: Implement the ELMER pipeline for integrative analysis of DNA methylation and gene expression, particularly in Kidney Renal Clear Cell Carcinoma (KIRC).",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#pre-requisites",
    "href": "index.html#pre-requisites",
    "title": "R for Cancer Bioinformatics",
    "section": "Pre-requisites",
    "text": "Pre-requisites\n\nBasic knowledge of R syntax\nUnderstand the pipe operator (‚Äú%&gt;%‚Äù) (help material https://r4ds.had.co.nz/pipes.html)\nUnderstand the SummarizedExperiment data structure (help material http://bioconductor.org/packages/SummarizedExperiment/)",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#course-format",
    "href": "index.html#course-format",
    "title": "R for Cancer Bioinformatics",
    "section": "Course Format",
    "text": "Course Format\nThe course will be delivered through a combination of lectures, hands-on practical sessions, and interactive discussions. Participants will have access to real TCGA datasets and will be guided through step-by-step analysis using R. Additionally, participants will be provided with relevant learning resources, including code examples and data repositories, to support their learning outside the course hours.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "prework.html#install-bioconductor",
    "href": "prework.html#install-bioconductor",
    "title": "Preparation",
    "section": "Install Bioconductor",
    "text": "Install Bioconductor\n\nif (!require(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\nBiocManager::install(version = \"3.17\")"
  },
  {
    "objectID": "prework.html#install-bioconductor-packages",
    "href": "prework.html#install-bioconductor-packages",
    "title": "Preparation",
    "section": "Install Bioconductor Packages",
    "text": "Install Bioconductor Packages\n\nBiocManager::install(c(\"TCGAbiolinks\", \"SummarizedExperiment\", \"maftools\"))"
  },
  {
    "objectID": "case-studies/case-study-01.html",
    "href": "case-studies/case-study-01.html",
    "title": "Case Study 1: Pan Cancer Downstream Analysis BRCA",
    "section": "",
    "text": "In this case study, we will delve into the world of bioinformatics and cancer research by performing a downstream analysis of the BRCA (Breast Invasive Carcinoma) cancer dataset from the Pan Cancer Atlas. Our primary focus will be on utilizing R programming and basic concepts of bioinformatics and data analysis to gain insights into this specific cancer type."
  },
  {
    "objectID": "case-studies/case-study-01.html#introduction",
    "href": "case-studies/case-study-01.html#introduction",
    "title": "Case Study 1: Pan Cancer Downstream Analysis BRCA",
    "section": "",
    "text": "In this case study, we will delve into the world of bioinformatics and cancer research by performing a downstream analysis of the BRCA (Breast Invasive Carcinoma) cancer dataset from the Pan Cancer Atlas. Our primary focus will be on utilizing R programming and basic concepts of bioinformatics and data analysis to gain insights into this specific cancer type."
  },
  {
    "objectID": "case-studies/case-study-01.html#dataset-description",
    "href": "case-studies/case-study-01.html#dataset-description",
    "title": "Case Study 1: Pan Cancer Downstream Analysis BRCA",
    "section": "Dataset Description",
    "text": "Dataset Description\nThe Pan Cancer Atlas project provides comprehensive genomic and transcriptomic data across various cancer types, including BRCA. The dataset contains gene expression profiles, clinical information, and other relevant molecular data from BRCA patients."
  },
  {
    "objectID": "case-studies/case-study-01.html#objectives",
    "href": "case-studies/case-study-01.html#objectives",
    "title": "Case Study 1: Pan Cancer Downstream Analysis BRCA",
    "section": "Objectives",
    "text": "Objectives\n\nData Retrieval and Preprocessing: Fetching and preprocessing the BRCA dataset, including data cleaning, normalization, and handling missing values.\nExploratory Data Analysis: Conducting a preliminary exploration of the data to understand its characteristics and distributions.\nDifferential Expression Analysis: Identifying genes that are differentially expressed in BRCA compared to normal tissue samples.\nGene Set Enrichment Analysis: Uncovering enriched biological pathways and functions associated with differentially expressed genes.\nSurvival Analysis: Analyzing the relationship between gene expression and patient survival.\nVisualization: Creating informative plots and visualizations to present the findings effectively."
  },
  {
    "objectID": "case-studies/case-study-01.html#methods",
    "href": "case-studies/case-study-01.html#methods",
    "title": "Case Study 1: Pan Cancer Downstream Analysis BRCA",
    "section": "Methods",
    "text": "Methods\n\nData Retrieval: Accessing the BRCA dataset using publicly available resources or data repositories.\nData Preprocessing: Cleaning the data, performing normalization, and handling missing values to ensure high-quality analysis.\nExploratory Data Analysis: Visualizing the distribution of gene expression levels, clinical parameters, and demographic information.\nDifferential Expression Analysis: Utilizing statistical methods (e.g., t-tests, ANOVA) to identify genes with significant expression changes in BRCA.\nGene Set Enrichment Analysis: Employing bioinformatics tools or R packages to find enriched pathways and functions related to differentially expressed genes.\nSurvival Analysis: Employing survival analysis techniques to assess the impact of gene expression on patient survival.\nVisualization: Generating plots and graphs using R‚Äôs ggplot2 or other visualization libraries to communicate results effectively."
  },
  {
    "objectID": "case-studies/case-study-02.html",
    "href": "case-studies/case-study-02.html",
    "title": "Case Study 2: Pan Cancer Downstream Analysis of LGG (Low-Grade Glioma)",
    "section": "",
    "text": "In this case study, we will embark on a bioinformatics journey to analyze the LGG (Low-Grade Glioma) cancer dataset from the Pan Cancer Atlas. Our focus will be on utilizing R programming and basic bioinformatics concepts to gain valuable insights into the genetic and molecular characteristics of LGG."
  },
  {
    "objectID": "case-studies/case-study-02.html#introduction",
    "href": "case-studies/case-study-02.html#introduction",
    "title": "Case Study 2: Pan Cancer Downstream Analysis of LGG (Low-Grade Glioma)",
    "section": "",
    "text": "In this case study, we will embark on a bioinformatics journey to analyze the LGG (Low-Grade Glioma) cancer dataset from the Pan Cancer Atlas. Our focus will be on utilizing R programming and basic bioinformatics concepts to gain valuable insights into the genetic and molecular characteristics of LGG."
  },
  {
    "objectID": "case-studies/case-study-02.html#dataset-description",
    "href": "case-studies/case-study-02.html#dataset-description",
    "title": "Case Study 2: Pan Cancer Downstream Analysis of LGG (Low-Grade Glioma)",
    "section": "Dataset Description",
    "text": "Dataset Description\nThe Pan Cancer Atlas project provides comprehensive genomic and transcriptomic data across various cancer types, including LGG. The dataset contains gene expression profiles, clinical information, and other molecular data from LGG patients."
  },
  {
    "objectID": "case-studies/case-study-02.html#objectives",
    "href": "case-studies/case-study-02.html#objectives",
    "title": "Case Study 2: Pan Cancer Downstream Analysis of LGG (Low-Grade Glioma)",
    "section": "Objectives",
    "text": "Objectives\n\nData Retrieval and Preprocessing: Accessing the LGG dataset, performing data cleaning, normalization, and handling missing values to ensure reliable downstream analysis.\nExploratory Data Analysis: Conducting an initial exploration of the data to understand the distribution and patterns of gene expression levels and clinical parameters.\nDifferential Expression Analysis: Identifying genes that are differentially expressed in LGG compared to normal tissue samples.\nGene Set Enrichment Analysis: Uncovering enriched biological pathways and functions associated with the differentially expressed genes.\nSurvival Analysis: Investigating the relationship between gene expression patterns and patient survival.\nVisualization: Creating informative plots and visualizations to effectively present the findings."
  },
  {
    "objectID": "case-studies/case-study-02.html#methods",
    "href": "case-studies/case-study-02.html#methods",
    "title": "Case Study 2: Pan Cancer Downstream Analysis of LGG (Low-Grade Glioma)",
    "section": "Methods",
    "text": "Methods\n\nData Retrieval: Accessing the LGG dataset from publicly available resources or data repositories.\nData Preprocessing: Cleaning the data, performing normalization, and handling missing values to ensure the quality of downstream analysis.\nExploratory Data Analysis: Visualizing the distribution of gene expression levels, clinical parameters, and demographic information.\nDifferential Expression Analysis: Employing statistical methods (e.g., t-tests, ANOVA) to identify genes with significant expression changes in LGG.\nGene Set Enrichment Analysis: Utilizing bioinformatics tools or R packages to discover enriched pathways and functions related to differentially expressed genes.\nSurvival Analysis: Employing survival analysis techniques to assess the impact of gene expression on patient survival.\nVisualization: Generating plots and graphs using R‚Äôs ggplot2 or other visualization libraries to effectively communicate the results."
  },
  {
    "objectID": "case-studies/case-study-02.html#conclusion",
    "href": "case-studies/case-study-02.html#conclusion",
    "title": "Case Study 2: Pan Cancer Downstream Analysis of LGG (Low-Grade Glioma)",
    "section": "Conclusion",
    "text": "Conclusion\nBy the end of this case study, you will have gained practical experience in R programming, bioinformatics analysis, and cancer research, specifically in the context of LGG. Understanding the genetic alterations and molecular pathways associated with LGG can contribute to a deeper knowledge of this type of brain tumor and potentially lead to improved diagnostic and therapeutic strategies."
  },
  {
    "objectID": "case-studies/case-study-03.html",
    "href": "case-studies/case-study-03.html",
    "title": "Case Study 3: Integration of Methylation and Expression Data for Adrenocortical Carcinoma (ACC)",
    "section": "",
    "text": "In this case study, we will dive into the field of bioinformatics and cancer research by exploring the integration of methylation and gene expression data for Adrenocortical Carcinoma (ACC). ACC is a rare and aggressive cancer that originates in the adrenal cortex. Our primary focus will be on utilizing R programming to integrate these two types of data and gain deeper insights into the molecular characteristics of ACC."
  },
  {
    "objectID": "case-studies/case-study-03.html#introduction",
    "href": "case-studies/case-study-03.html#introduction",
    "title": "Case Study 3: Integration of Methylation and Expression Data for Adrenocortical Carcinoma (ACC)",
    "section": "",
    "text": "In this case study, we will dive into the field of bioinformatics and cancer research by exploring the integration of methylation and gene expression data for Adrenocortical Carcinoma (ACC). ACC is a rare and aggressive cancer that originates in the adrenal cortex. Our primary focus will be on utilizing R programming to integrate these two types of data and gain deeper insights into the molecular characteristics of ACC."
  },
  {
    "objectID": "case-studies/case-study-03.html#dataset-description",
    "href": "case-studies/case-study-03.html#dataset-description",
    "title": "Case Study 3: Integration of Methylation and Expression Data for Adrenocortical Carcinoma (ACC)",
    "section": "Dataset Description",
    "text": "Dataset Description\nWe will use publicly available datasets that provide methylation profiles and gene expression data from ACC patients. The integration of these two types of data will help us understand the epigenetic regulation of gene expression in ACC and potentially reveal novel biomarkers or therapeutic targets."
  },
  {
    "objectID": "case-studies/case-study-03.html#objectives",
    "href": "case-studies/case-study-03.html#objectives",
    "title": "Case Study 3: Integration of Methylation and Expression Data for Adrenocortical Carcinoma (ACC)",
    "section": "Objectives",
    "text": "Objectives\n\nData Retrieval and Preprocessing: Accessing the methylation and gene expression datasets for ACC and performing necessary preprocessing steps, such as data cleaning and normalization.\nExploratory Data Analysis: Conducting an initial exploration of both methylation and expression data to gain an understanding of their characteristics and distributions.\nIntegration of Methylation and Expression Data: Developing strategies to integrate methylation and gene expression data, taking into account their respective platforms and features.\nIdentification of Differentially Methylated and Expressed Genes: Identifying genes that are differentially methylated and differentially expressed in ACC compared to normal samples.\nFunctional Enrichment Analysis: Performing functional enrichment analysis to uncover enriched biological pathways and gene functions related to differentially methylated and expressed genes.\nVisualization: Creating informative plots and visualizations to effectively present the integrated data and analysis results."
  },
  {
    "objectID": "case-studies/case-study-03.html#methods",
    "href": "case-studies/case-study-03.html#methods",
    "title": "Case Study 3: Integration of Methylation and Expression Data for Adrenocortical Carcinoma (ACC)",
    "section": "Methods",
    "text": "Methods\n\nData Retrieval: Accessing the ACC methylation and gene expression datasets from publicly available resources or data repositories.\nData Preprocessing: Cleaning the data, performing normalization for both methylation and expression data, and handling missing values.\nExploratory Data Analysis: Visualizing the distribution of methylation beta values, gene expression levels, and relevant clinical information.\nIntegration of Methylation and Expression Data: Developing appropriate statistical approaches or using R packages to integrate these two types of data.\nDifferential Analysis: Conducting differential analysis to identify genes with significant changes in methylation and expression between ACC and normal samples.\nFunctional Enrichment Analysis: Using bioinformatics tools or R packages to perform functional enrichment analysis of differentially methylated and expressed genes.\nVisualization: Generating integrated plots and visualizations to present the findings effectively."
  },
  {
    "objectID": "case-studies/case-study-03.html#conclusion",
    "href": "case-studies/case-study-03.html#conclusion",
    "title": "Case Study 3: Integration of Methylation and Expression Data for Adrenocortical Carcinoma (ACC)",
    "section": "Conclusion",
    "text": "Conclusion\nBy the end of this case study, you will have gained practical experience in R programming, bioinformatics analysis, and the integration of methylation and gene expression data for ACC. Integrating these two types of data can provide valuable insights into the regulatory mechanisms and molecular alterations associated with ACC, contributing to potential advancements in diagnosis and treatment of this aggressive cancer."
  },
  {
    "objectID": "case-studies/case-study-01.html#conclusion",
    "href": "case-studies/case-study-01.html#conclusion",
    "title": "Case Study 1: Pan Cancer Downstream Analysis BRCA",
    "section": "Conclusion",
    "text": "Conclusion\nThis case study will equip you with essential skills in bioinformatics, R programming, and cancer research. By the end of this study, you will gain insights into downstream analysis and its significance in understanding the molecular characteristics of BRCA. Join us on this exciting journey as we uncover potential biomarkers and biological processes that contribute to BRCA development and progression."
  },
  {
    "objectID": "case-studies/case-study-04.html",
    "href": "case-studies/case-study-04.html",
    "title": "Case Study 4: ELMER Pipeline for Integrative Analysis of DNA Methylation and Gene Expression in Kidney Renal Clear Cell Carcinoma (KIRC)",
    "section": "",
    "text": "In this case study, we will delve into the world of bioinformatics and cancer research by exploring the ELMER (Enhancer Linking by Methylation/Expression Relationships) pipeline for integrative analysis of DNA methylation and gene expression data in Kidney Renal Clear Cell Carcinoma (KIRC). KIRC is the most common type of kidney cancer, and understanding the epigenetic regulation of gene expression in this cancer can provide valuable insights into its molecular mechanisms.\nELMER is a powerful bioinformatics tool that allows the identification of differentially methylated enhancers and their target genes, facilitating the exploration of gene regulatory networks and potential therapeutic targets."
  },
  {
    "objectID": "case-studies/case-study-04.html#introduction",
    "href": "case-studies/case-study-04.html#introduction",
    "title": "Case Study 4: ELMER Pipeline for Integrative Analysis of DNA Methylation and Gene Expression in Kidney Renal Clear Cell Carcinoma (KIRC)",
    "section": "",
    "text": "In this case study, we will delve into the world of bioinformatics and cancer research by exploring the ELMER (Enhancer Linking by Methylation/Expression Relationships) pipeline for integrative analysis of DNA methylation and gene expression data in Kidney Renal Clear Cell Carcinoma (KIRC). KIRC is the most common type of kidney cancer, and understanding the epigenetic regulation of gene expression in this cancer can provide valuable insights into its molecular mechanisms.\nELMER is a powerful bioinformatics tool that allows the identification of differentially methylated enhancers and their target genes, facilitating the exploration of gene regulatory networks and potential therapeutic targets."
  },
  {
    "objectID": "case-studies/case-study-04.html#dataset-description",
    "href": "case-studies/case-study-04.html#dataset-description",
    "title": "Case Study 4: ELMER Pipeline for Integrative Analysis of DNA Methylation and Gene Expression in Kidney Renal Clear Cell Carcinoma (KIRC)",
    "section": "Dataset Description",
    "text": "Dataset Description\nWe will use publicly available DNA methylation and gene expression datasets from KIRC patients. By integrating these datasets using the ELMER pipeline, we aim to discover key regulatory elements and gene expression changes associated with KIRC."
  },
  {
    "objectID": "case-studies/case-study-04.html#objectives",
    "href": "case-studies/case-study-04.html#objectives",
    "title": "Case Study 4: ELMER Pipeline for Integrative Analysis of DNA Methylation and Gene Expression in Kidney Renal Clear Cell Carcinoma (KIRC)",
    "section": "Objectives",
    "text": "Objectives\n\nData Retrieval and Preprocessing: Accessing the KIRC datasets, performing data cleaning, and normalizing methylation and expression data for downstream analysis.\nExploratory Data Analysis: Conducting an initial exploration of methylation and expression data to understand their distributions and characteristics.\nIdentification of Differentially Methylated Enhancers: Implementing the ELMER pipeline to identify differentially methylated enhancers associated with KIRC.\nIdentification of Target Genes: Determining the target genes regulated by the identified differentially methylated enhancers.\nFunctional Enrichment Analysis: Performing functional enrichment analysis to uncover enriched biological pathways and gene functions associated with the target genes.\nVisualization: Creating informative plots and visualizations to effectively present the results of the ELMER analysis."
  },
  {
    "objectID": "case-studies/case-study-04.html#methods",
    "href": "case-studies/case-study-04.html#methods",
    "title": "Case Study 4: ELMER Pipeline for Integrative Analysis of DNA Methylation and Gene Expression in Kidney Renal Clear Cell Carcinoma (KIRC)",
    "section": "Methods",
    "text": "Methods\n\nData Retrieval: Accessing the KIRC methylation and gene expression datasets from publicly available resources or data repositories.\nData Preprocessing: Cleaning the data, performing normalization for both methylation and expression data, and handling missing values.\nExploratory Data Analysis: Visualizing the distribution of methylation beta values, gene\nIdentification of Differentially Methylated Regions (DMRs): Statistical methods, such as limma or DSS, were applied to identify DMRs between KIRC tumor and adjacent normal samples.\nIntegrative Analysis: The DMRs were integrated with gene expression data using a linear regression model to identify enhancers associated with changes in gene expression.\nFunctional Annotation: The identified DMRs and enhancer-gene pairs were annotated to relevant genomic features, such as enhancers, promoters, and genes.\nPathway Analysis: Enrichment analysis of differentially expressed genes was performed to identify overrepresented biological pathways associated with KIRC."
  },
  {
    "objectID": "case-studies/case-study-04.html#conclusion",
    "href": "case-studies/case-study-04.html#conclusion",
    "title": "Case Study 4: ELMER Pipeline for Integrative Analysis of DNA Methylation and Gene Expression in Kidney Renal Clear Cell Carcinoma (KIRC)",
    "section": "Conclusion",
    "text": "Conclusion\nThe ELMER pipeline provided valuable insights into the epigenetic regulation of gene expression in Kidney Renal Clear Cell Carcinoma (KIRC). The integrative analysis of DNA methylation and gene expression data revealed differentially methylated enhancer regions linked to changes in gene expression, potentially contributing to KIRC pathogenesis. The identified candidate enhancer-gene pairs and enriched biological pathways may serve as potential therapeutic targets and biomarkers for further investigation. This study highlights the significance of epigenetic mechanisms in cancer biology and provides a foundation for future research in KIRC epigenomics. However, further validation and functional studies are required to establish the clinical relevance of the findings and their potential implications for KIRC treatment and prognosis."
  },
  {
    "objectID": "case-studies/case-study-01.html#data-analysis",
    "href": "case-studies/case-study-01.html#data-analysis",
    "title": "Case Study 1: Pan Cancer Downstream Analysis BRCA",
    "section": "Data Analysis",
    "text": "Data Analysis\nRequired packages\n\nlibrary(SummarizedExperiment)\nlibrary(TCGAbiolinks)\nlibrary(maftools)\n\nData retrieval\n\nquery.exp &lt;- GDCquery(\n    project = \"TCGA-BRCA\", \n    data.category = \"Transcriptome Profiling\",\n    data.type = \"Gene Expression Quantification\", \n    workflow.type = \"STAR - Counts\",\n    sample.type = c(\"Primary Tumor\",\"Solid Tissue Normal\")\n)\n\n--------------------------------------\n\n\no GDCquery: Searching in GDC database\n\n\n--------------------------------------\n\n\nGenome of reference: hg38\n\n\n--------------------------------------------\n\n\noo Accessing GDC. This might take a while...\n\n\n--------------------------------------------\n\n\nooo Project: TCGA-BRCA\n\n\n--------------------\n\n\noo Filtering results\n\n\n--------------------\n\n\nooo By data.type\n\n\nooo By workflow.type\n\n\nooo By sample.type\n\n\n----------------\n\n\noo Checking data\n\n\n----------------\n\n\nooo Checking if there are duplicated cases\n\n\nooo Checking if there are results for the query\n\n\n-------------------\n\n\no Preparing output\n\n\n-------------------"
  },
  {
    "objectID": "index.html#what-youll-learn",
    "href": "index.html#what-youll-learn",
    "title": "R for Cancer Bioinformatics",
    "section": "What you‚Äôll learn?",
    "text": "What you‚Äôll learn?\n\n\nCase Study 1: Pan Cancer Downstream Analysis BRCA\nIn this case study, we will delve into the world of bioinformatics and cancer research by performing a downstream analysis of the BRCA (Breast Invasive Carcinoma) cancer dataset from the Pan Cancer Atlas. Our primary focus will be on utilizing R programming and basic concepts of bioinformatics and data analysis to gain insights into this specific cancer type.\n\n\nCase Study 2: Pan Cancer Downstream Analysis of LGG (Low-Grade Glioma)\nIn this case study, we will embark on a bioinformatics journey to analyze the LGG (Low-Grade Glioma) cancer dataset from the Pan Cancer Atlas. Our focus will be on utilizing R programming and basic bioinformatics concepts to gain valuable insights into the genetic and molecular characteristics of LGG.\n\n\nCase Study 3: Integration of Methylation and Expression Data for Adrenocortical Carcinoma (ACC)\nIn this case study, we will dive into the field of bioinformatics and cancer research by exploring the integration of methylation and gene expression data for Adrenocortical Carcinoma (ACC). ACC is a rare and aggressive cancer that originates in the adrenal cortex. Our primary focus will be on utilizing R programming to integrate these two types of data and gain deeper insights into the molecular characteristics of ACC.\n\n\nCase Study 4: ELMER Pipeline for Integrative Analysis of DNA Methylation and Gene Expression in Kidney Renal Clear Cell Carcinoma (KIRC)\nIn this case study, we will delve into the world of bioinformatics and cancer research by exploring the ELMER (Enhancer Linking by Methylation/Expression Relationships) pipeline for integrative analysis of DNA methylation and gene expression data in Kidney Renal Clear Cell Carcinoma (KIRC). KIRC is the most common type of kidney cancer, and understanding the epigenetic regulation of gene expression in this cancer can provide valuable insights into its molecular mechanisms.",
    "crumbs": [
      "Home"
    ]
  }
]